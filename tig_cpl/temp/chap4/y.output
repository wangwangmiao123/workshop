Terminals which are not used

   MINUs


State 31 conflicts: 1 shift/reduce
State 33 conflicts: 1 shift/reduce
State 56 conflicts: 12 shift/reduce
State 69 conflicts: 9 shift/reduce
State 70 conflicts: 12 shift/reduce
State 71 conflicts: 9 shift/reduce
State 72 conflicts: 9 shift/reduce
State 73 conflicts: 12 shift/reduce
State 74 conflicts: 12 shift/reduce
State 75 conflicts: 12 shift/reduce
State 76 conflicts: 12 shift/reduce
State 77 conflicts: 12 shift/reduce
State 78 conflicts: 12 shift/reduce
State 79 conflicts: 12 shift/reduce
State 80 conflicts: 12 shift/reduce
State 89 conflicts: 13 shift/reduce
State 90 conflicts: 12 shift/reduce
State 113 conflicts: 12 shift/reduce
State 114 conflicts: 12 shift/reduce
State 130 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 var: ID
    3    | ID DOT ID
    4    | ID LBRACK exp RBRACK

    5 exp: var
    6    | NIL
    7    | INT
    8    | STRING
    9    | ID LPAREN explist RPAREN
   10    | exp PLUS exp
   11    | exp MINUS exp
   12    | exp TIMES exp
   13    | exp DIVIDE exp
   14    | exp EQ exp
   15    | exp NEQ exp
   16    | exp LT exp
   17    | exp GT exp
   18    | exp LE exp
   19    | exp GE exp
   20    | ID ASSIGN exp
   21    | IF exp THEN exp
   22    | IF exp THEN exp ELSE exp
   23    | exp AND exp
   24    | exp OR exp
   25    | WHILE exp DO exp
   26    | BREAK SEMICOLON
   27    | MINUS INT
   28    | LET declist IN exp END
   29    | ID LBRACK exp RBRACK OF exp
   30    | FOR ID ASSIGN exp TO exp DO exp
   31    | ID LBRACE efieldlist RBRACE
   32    | LPAREN expseq RPAREN

   33 explist: exp COMMA explist
   34        | exp
   35        | /* empty */

   36 expseq: exp SEMICOLON exp
   37       | exp SEMICOLON expseq

   38 dec: fundeclist
   39    | nametylist
   40    | VAR ID COLON ID ASSIGN exp
   41    | VAR ID ASSIGN exp

   42 declist: dec
   43        | dec declist

   44 fundec: FUNCTION ID LPAREN fieldlist RPAREN COLON ID EQ exp
   45       | FUNCTION ID LPAREN fieldlist RPAREN EQ exp

   46 fundeclist: fundec fundeclist
   47           | fundec

   48 ty: LBRACE fieldlist RBRACE
   49   | ARRAY OF ID
   50   | ID

   51 namety: TYPE ID EQ ty

   52 nametylist: namety
   53           | namety nametylist

   54 field: ID COLON ID

   55 fieldlist: /* empty */
   56          | field COMMA fieldlist
   57          | field

   58 efield: ID EQ exp

   59 efieldlist: efield
   60           | efield COMMA efieldlist


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 2 3 4 9 20 29 30 31 40 41 44 45 49 50 51 54 58
STRING (259) 8
INT (260) 7 27
COMMA (261) 33 56 60
COLON (262) 40 44 54
SEMICOLON (263) 26 36 37
LPAREN (264) 9 32 44 45
RPAREN (265) 9 32 44 45
LBRACK (266) 4 29
RBRACK (267) 4 29
LBRACE (268) 31 48
RBRACE (269) 31 48
DOT (270) 3
PLUS (271) 10
MINUS (272) 11 27
TIMES (273) 12
DIVIDE (274) 13
EQ (275) 14 44 45 51 58
NEQ (276) 15
LT (277) 16
LE (278) 18
GT (279) 17
GE (280) 19
AND (281) 23
OR (282) 24
ASSIGN (283) 20 30 40 41
ARRAY (284) 49
IF (285) 21 22
THEN (286) 21 22
ELSE (287) 22
WHILE (288) 25
FOR (289) 30
TO (290) 30
DO (291) 25 30
LET (292) 28
IN (293) 28
END (294) 28
OF (295) 29 49
BREAK (296) 26
NIL (297) 6
FUNCTION (298) 44 45
VAR (299) 40 41
TYPE (300) 51
MINUs (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
var (49)
    on left: 2 3 4, on right: 5
exp (50)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
    25 26 27 28 29 30 31 32, on right: 1 4 10 11 12 13 14 15 16 17
    18 19 20 21 22 23 24 25 28 29 30 33 34 36 37 40 41 44 45 58
explist (51)
    on left: 33 34 35, on right: 9 33
expseq (52)
    on left: 36 37, on right: 32 37
dec (53)
    on left: 38 39 40 41, on right: 42 43
declist (54)
    on left: 42 43, on right: 28 43
fundec (55)
    on left: 44 45, on right: 46 47
fundeclist (56)
    on left: 46 47, on right: 38 46
ty (57)
    on left: 48 49 50, on right: 51
namety (58)
    on left: 51, on right: 52 53
nametylist (59)
    on left: 52 53, on right: 39 53
field (60)
    on left: 54, on right: 56 57
fieldlist (61)
    on left: 55 56 57, on right: 44 45 48 56
efield (62)
    on left: 58, on right: 59 60
efieldlist (63)
    on left: 59 60, on right: 31 60


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    var      go to state 13
    exp      go to state 14


state 1

    2 var: ID .
    3    | ID . DOT ID
    4    | ID . LBRACK exp RBRACK
    9 exp: ID . LPAREN explist RPAREN
   20    | ID . ASSIGN exp
   29    | ID . LBRACK exp RBRACK OF exp
   31    | ID . LBRACE efieldlist RBRACE

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17
    DOT     shift, and go to state 18
    ASSIGN  shift, and go to state 19

    $default  reduce using rule 2 (var)


state 2

    8 exp: STRING .

    $default  reduce using rule 8 (exp)


state 3

    7 exp: INT .

    $default  reduce using rule 7 (exp)


state 4

   32 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var     go to state 13
    exp     go to state 20
    expseq  go to state 21


state 5

   27 exp: MINUS . INT

    INT  shift, and go to state 22


state 6

   21 exp: IF . exp THEN exp
   22    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 23


state 7

   25 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 24


state 8

   30 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 25


state 9

   28 exp: LET . declist IN exp END

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    dec         go to state 29
    declist     go to state 30
    fundec      go to state 31
    fundeclist  go to state 32
    namety      go to state 33
    nametylist  go to state 34


state 10

   26 exp: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 35


state 11

    6 exp: NIL .

    $default  reduce using rule 6 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 36


state 13

    5 exp: var .

    $default  reduce using rule 5 (exp)


state 14

    1 program: exp .
   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 1 (program)


state 15

    9 exp: ID LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 35 (explist)

    var      go to state 13
    exp      go to state 49
    explist  go to state 50


state 16

    4 var: ID LBRACK . exp RBRACK
   29 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 51


state 17

   31 exp: ID LBRACE . efieldlist RBRACE

    ID  shift, and go to state 52

    efield      go to state 53
    efieldlist  go to state 54


state 18

    3 var: ID DOT . ID

    ID  shift, and go to state 55


state 19

   20 exp: ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 56


state 20

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   36 expseq: exp . SEMICOLON exp
   37       | exp . SEMICOLON expseq

    SEMICOLON  shift, and go to state 57
    PLUS       shift, and go to state 37
    MINUS      shift, and go to state 38
    TIMES      shift, and go to state 39
    DIVIDE     shift, and go to state 40
    EQ         shift, and go to state 41
    NEQ        shift, and go to state 42
    LT         shift, and go to state 43
    LE         shift, and go to state 44
    GT         shift, and go to state 45
    GE         shift, and go to state 46
    AND        shift, and go to state 47
    OR         shift, and go to state 48


state 21

   32 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 58


state 22

   27 exp: MINUS INT .

    $default  reduce using rule 27 (exp)


state 23

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   21    | IF exp . THEN exp
   22    | IF exp . THEN exp ELSE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    THEN    shift, and go to state 59


state 24

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   25    | WHILE exp . DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    DO      shift, and go to state 60


state 25

   30 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 61


state 26

   44 fundec: FUNCTION . ID LPAREN fieldlist RPAREN COLON ID EQ exp
   45       | FUNCTION . ID LPAREN fieldlist RPAREN EQ exp

    ID  shift, and go to state 62


state 27

   40 dec: VAR . ID COLON ID ASSIGN exp
   41    | VAR . ID ASSIGN exp

    ID  shift, and go to state 63


state 28

   51 namety: TYPE . ID EQ ty

    ID  shift, and go to state 64


state 29

   42 declist: dec .
   43        | dec . declist

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 42 (declist)

    dec         go to state 29
    declist     go to state 65
    fundec      go to state 31
    fundeclist  go to state 32
    namety      go to state 33
    nametylist  go to state 34


state 30

   28 exp: LET declist . IN exp END

    IN  shift, and go to state 66


state 31

   46 fundeclist: fundec . fundeclist
   47           | fundec .

    FUNCTION  shift, and go to state 26

    FUNCTION  [reduce using rule 47 (fundeclist)]
    $default  reduce using rule 47 (fundeclist)

    fundec      go to state 31
    fundeclist  go to state 67


state 32

   38 dec: fundeclist .

    $default  reduce using rule 38 (dec)


state 33

   52 nametylist: namety .
   53           | namety . nametylist

    TYPE  shift, and go to state 28

    TYPE      [reduce using rule 52 (nametylist)]
    $default  reduce using rule 52 (nametylist)

    namety      go to state 33
    nametylist  go to state 68


state 34

   39 dec: nametylist .

    $default  reduce using rule 39 (dec)


state 35

   26 exp: BREAK SEMICOLON .

    $default  reduce using rule 26 (exp)


state 36

    0 $accept: program $end .

    $default  accept


state 37

   10 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 69


state 38

   11 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 70


state 39

   12 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 71


state 40

   13 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 72


state 41

   14 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 73


state 42

   15 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 74


state 43

   16 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 75


state 44

   18 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 76


state 45

   17 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 77


state 46

   19 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 78


state 47

   23 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 79


state 48

   24 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 80


state 49

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   33 explist: exp . COMMA explist
   34        | exp .

    COMMA   shift, and go to state 81
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 34 (explist)


state 50

    9 exp: ID LPAREN explist . RPAREN

    RPAREN  shift, and go to state 82


state 51

    4 var: ID LBRACK exp . RBRACK
   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   29    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 83
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48


state 52

   58 efield: ID . EQ exp

    EQ  shift, and go to state 84


state 53

   59 efieldlist: efield .
   60           | efield . COMMA efieldlist

    COMMA  shift, and go to state 85

    $default  reduce using rule 59 (efieldlist)


state 54

   31 exp: ID LBRACE efieldlist . RBRACE

    RBRACE  shift, and go to state 86


state 55

    3 var: ID DOT ID .

    $default  reduce using rule 3 (var)


state 56

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   20    | ID ASSIGN exp .
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 20 (exp)]
    MINUS     [reduce using rule 20 (exp)]
    TIMES     [reduce using rule 20 (exp)]
    DIVIDE    [reduce using rule 20 (exp)]
    EQ        [reduce using rule 20 (exp)]
    NEQ       [reduce using rule 20 (exp)]
    LT        [reduce using rule 20 (exp)]
    LE        [reduce using rule 20 (exp)]
    GT        [reduce using rule 20 (exp)]
    GE        [reduce using rule 20 (exp)]
    AND       [reduce using rule 20 (exp)]
    OR        [reduce using rule 20 (exp)]
    $default  reduce using rule 20 (exp)


state 57

   36 expseq: exp SEMICOLON . exp
   37       | exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var     go to state 13
    exp     go to state 87
    expseq  go to state 88


state 58

   32 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 32 (exp)


state 59

   21 exp: IF exp THEN . exp
   22    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 89


state 60

   25 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 90


state 61

   30 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 91


state 62

   44 fundec: FUNCTION ID . LPAREN fieldlist RPAREN COLON ID EQ exp
   45       | FUNCTION ID . LPAREN fieldlist RPAREN EQ exp

    LPAREN  shift, and go to state 92


state 63

   40 dec: VAR ID . COLON ID ASSIGN exp
   41    | VAR ID . ASSIGN exp

    COLON   shift, and go to state 93
    ASSIGN  shift, and go to state 94


state 64

   51 namety: TYPE ID . EQ ty

    EQ  shift, and go to state 95


state 65

   43 declist: dec declist .

    $default  reduce using rule 43 (declist)


state 66

   28 exp: LET declist IN . exp END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 96


state 67

   46 fundeclist: fundec fundeclist .

    $default  reduce using rule 46 (fundeclist)


state 68

   53 nametylist: namety nametylist .

    $default  reduce using rule 53 (nametylist)


state 69

   10 exp: exp . PLUS exp
   10    | exp PLUS exp .
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    MINUS     [reduce using rule 10 (exp)]
    EQ        [reduce using rule 10 (exp)]
    NEQ       [reduce using rule 10 (exp)]
    LT        [reduce using rule 10 (exp)]
    LE        [reduce using rule 10 (exp)]
    GT        [reduce using rule 10 (exp)]
    GE        [reduce using rule 10 (exp)]
    AND       [reduce using rule 10 (exp)]
    OR        [reduce using rule 10 (exp)]
    $default  reduce using rule 10 (exp)


state 70

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   11    | exp MINUS exp .
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 11 (exp)]
    MINUS     [reduce using rule 11 (exp)]
    TIMES     [reduce using rule 11 (exp)]
    DIVIDE    [reduce using rule 11 (exp)]
    EQ        [reduce using rule 11 (exp)]
    NEQ       [reduce using rule 11 (exp)]
    LT        [reduce using rule 11 (exp)]
    LE        [reduce using rule 11 (exp)]
    GT        [reduce using rule 11 (exp)]
    GE        [reduce using rule 11 (exp)]
    AND       [reduce using rule 11 (exp)]
    OR        [reduce using rule 11 (exp)]
    $default  reduce using rule 11 (exp)


state 71

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   12    | exp TIMES exp .
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    MINUS  shift, and go to state 38
    EQ     shift, and go to state 41
    NEQ    shift, and go to state 42
    LT     shift, and go to state 43
    LE     shift, and go to state 44
    GT     shift, and go to state 45
    GE     shift, and go to state 46
    AND    shift, and go to state 47
    OR     shift, and go to state 48

    MINUS     [reduce using rule 12 (exp)]
    EQ        [reduce using rule 12 (exp)]
    NEQ       [reduce using rule 12 (exp)]
    LT        [reduce using rule 12 (exp)]
    LE        [reduce using rule 12 (exp)]
    GT        [reduce using rule 12 (exp)]
    GE        [reduce using rule 12 (exp)]
    AND       [reduce using rule 12 (exp)]
    OR        [reduce using rule 12 (exp)]
    $default  reduce using rule 12 (exp)


state 72

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   13    | exp DIVIDE exp .
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    MINUS  shift, and go to state 38
    EQ     shift, and go to state 41
    NEQ    shift, and go to state 42
    LT     shift, and go to state 43
    LE     shift, and go to state 44
    GT     shift, and go to state 45
    GE     shift, and go to state 46
    AND    shift, and go to state 47
    OR     shift, and go to state 48

    MINUS     [reduce using rule 13 (exp)]
    EQ        [reduce using rule 13 (exp)]
    NEQ       [reduce using rule 13 (exp)]
    LT        [reduce using rule 13 (exp)]
    LE        [reduce using rule 13 (exp)]
    GT        [reduce using rule 13 (exp)]
    GE        [reduce using rule 13 (exp)]
    AND       [reduce using rule 13 (exp)]
    OR        [reduce using rule 13 (exp)]
    $default  reduce using rule 13 (exp)


state 73

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   14    | exp EQ exp .
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 14 (exp)]
    MINUS     [reduce using rule 14 (exp)]
    TIMES     [reduce using rule 14 (exp)]
    DIVIDE    [reduce using rule 14 (exp)]
    EQ        [reduce using rule 14 (exp)]
    NEQ       [reduce using rule 14 (exp)]
    LT        [reduce using rule 14 (exp)]
    LE        [reduce using rule 14 (exp)]
    GT        [reduce using rule 14 (exp)]
    GE        [reduce using rule 14 (exp)]
    AND       [reduce using rule 14 (exp)]
    OR        [reduce using rule 14 (exp)]
    $default  reduce using rule 14 (exp)


state 74

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   15    | exp NEQ exp .
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 15 (exp)]
    MINUS     [reduce using rule 15 (exp)]
    TIMES     [reduce using rule 15 (exp)]
    DIVIDE    [reduce using rule 15 (exp)]
    EQ        [reduce using rule 15 (exp)]
    NEQ       [reduce using rule 15 (exp)]
    LT        [reduce using rule 15 (exp)]
    LE        [reduce using rule 15 (exp)]
    GT        [reduce using rule 15 (exp)]
    GE        [reduce using rule 15 (exp)]
    AND       [reduce using rule 15 (exp)]
    OR        [reduce using rule 15 (exp)]
    $default  reduce using rule 15 (exp)


state 75

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   16    | exp LT exp .
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 16 (exp)]
    MINUS     [reduce using rule 16 (exp)]
    TIMES     [reduce using rule 16 (exp)]
    DIVIDE    [reduce using rule 16 (exp)]
    EQ        [reduce using rule 16 (exp)]
    NEQ       [reduce using rule 16 (exp)]
    LT        [reduce using rule 16 (exp)]
    LE        [reduce using rule 16 (exp)]
    GT        [reduce using rule 16 (exp)]
    GE        [reduce using rule 16 (exp)]
    AND       [reduce using rule 16 (exp)]
    OR        [reduce using rule 16 (exp)]
    $default  reduce using rule 16 (exp)


state 76

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   18    | exp LE exp .
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 18 (exp)]
    MINUS     [reduce using rule 18 (exp)]
    TIMES     [reduce using rule 18 (exp)]
    DIVIDE    [reduce using rule 18 (exp)]
    EQ        [reduce using rule 18 (exp)]
    NEQ       [reduce using rule 18 (exp)]
    LT        [reduce using rule 18 (exp)]
    LE        [reduce using rule 18 (exp)]
    GT        [reduce using rule 18 (exp)]
    GE        [reduce using rule 18 (exp)]
    AND       [reduce using rule 18 (exp)]
    OR        [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)


state 77

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 17 (exp)]
    MINUS     [reduce using rule 17 (exp)]
    TIMES     [reduce using rule 17 (exp)]
    DIVIDE    [reduce using rule 17 (exp)]
    EQ        [reduce using rule 17 (exp)]
    NEQ       [reduce using rule 17 (exp)]
    LT        [reduce using rule 17 (exp)]
    LE        [reduce using rule 17 (exp)]
    GT        [reduce using rule 17 (exp)]
    GE        [reduce using rule 17 (exp)]
    AND       [reduce using rule 17 (exp)]
    OR        [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)


state 78

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   19    | exp GE exp .
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 19 (exp)]
    MINUS     [reduce using rule 19 (exp)]
    TIMES     [reduce using rule 19 (exp)]
    DIVIDE    [reduce using rule 19 (exp)]
    EQ        [reduce using rule 19 (exp)]
    NEQ       [reduce using rule 19 (exp)]
    LT        [reduce using rule 19 (exp)]
    LE        [reduce using rule 19 (exp)]
    GT        [reduce using rule 19 (exp)]
    GE        [reduce using rule 19 (exp)]
    AND       [reduce using rule 19 (exp)]
    OR        [reduce using rule 19 (exp)]
    $default  reduce using rule 19 (exp)


state 79

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   23    | exp AND exp .
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 23 (exp)]
    MINUS     [reduce using rule 23 (exp)]
    TIMES     [reduce using rule 23 (exp)]
    DIVIDE    [reduce using rule 23 (exp)]
    EQ        [reduce using rule 23 (exp)]
    NEQ       [reduce using rule 23 (exp)]
    LT        [reduce using rule 23 (exp)]
    LE        [reduce using rule 23 (exp)]
    GT        [reduce using rule 23 (exp)]
    GE        [reduce using rule 23 (exp)]
    AND       [reduce using rule 23 (exp)]
    OR        [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


state 80

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   24    | exp OR exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


state 81

   33 explist: exp COMMA . explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 35 (explist)

    var      go to state 13
    exp      go to state 49
    explist  go to state 97


state 82

    9 exp: ID LPAREN explist RPAREN .

    $default  reduce using rule 9 (exp)


state 83

    4 var: ID LBRACK exp RBRACK .
   29 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 98

    $default  reduce using rule 4 (var)


state 84

   58 efield: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 99


state 85

   60 efieldlist: efield COMMA . efieldlist

    ID  shift, and go to state 52

    efield      go to state 53
    efieldlist  go to state 100


state 86

   31 exp: ID LBRACE efieldlist RBRACE .

    $default  reduce using rule 31 (exp)


state 87

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   36 expseq: exp . SEMICOLON exp
   36       | exp SEMICOLON exp .
   37       | exp . SEMICOLON expseq

    SEMICOLON  shift, and go to state 57
    PLUS       shift, and go to state 37
    MINUS      shift, and go to state 38
    TIMES      shift, and go to state 39
    DIVIDE     shift, and go to state 40
    EQ         shift, and go to state 41
    NEQ        shift, and go to state 42
    LT         shift, and go to state 43
    LE         shift, and go to state 44
    GT         shift, and go to state 45
    GE         shift, and go to state 46
    AND        shift, and go to state 47
    OR         shift, and go to state 48

    $default  reduce using rule 36 (expseq)


state 88

   37 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 37 (expseq)


state 89

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   21    | IF exp THEN exp .
   22    | IF exp THEN exp . ELSE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    ELSE    shift, and go to state 101

    PLUS      [reduce using rule 21 (exp)]
    MINUS     [reduce using rule 21 (exp)]
    TIMES     [reduce using rule 21 (exp)]
    DIVIDE    [reduce using rule 21 (exp)]
    EQ        [reduce using rule 21 (exp)]
    NEQ       [reduce using rule 21 (exp)]
    LT        [reduce using rule 21 (exp)]
    LE        [reduce using rule 21 (exp)]
    GT        [reduce using rule 21 (exp)]
    GE        [reduce using rule 21 (exp)]
    AND       [reduce using rule 21 (exp)]
    OR        [reduce using rule 21 (exp)]
    ELSE      [reduce using rule 21 (exp)]
    $default  reduce using rule 21 (exp)


state 90

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   25    | WHILE exp DO exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


state 91

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   30    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    TO      shift, and go to state 102


state 92

   44 fundec: FUNCTION ID LPAREN . fieldlist RPAREN COLON ID EQ exp
   45       | FUNCTION ID LPAREN . fieldlist RPAREN EQ exp

    ID  shift, and go to state 103

    $default  reduce using rule 55 (fieldlist)

    field      go to state 104
    fieldlist  go to state 105


state 93

   40 dec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 106


state 94

   41 dec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 107


state 95

   51 namety: TYPE ID EQ . ty

    ID      shift, and go to state 108
    LBRACE  shift, and go to state 109
    ARRAY   shift, and go to state 110

    ty  go to state 111


state 96

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   28    | LET declist IN exp . END

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    END     shift, and go to state 112


state 97

   33 explist: exp COMMA explist .

    $default  reduce using rule 33 (explist)


state 98

   29 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 113


state 99

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   58 efield: ID EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 58 (efield)


state 100

   60 efieldlist: efield COMMA efieldlist .

    $default  reduce using rule 60 (efieldlist)


state 101

   22 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 114


state 102

   30 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 115


state 103

   54 field: ID . COLON ID

    COLON  shift, and go to state 116


state 104

   56 fieldlist: field . COMMA fieldlist
   57          | field .

    COMMA  shift, and go to state 117

    $default  reduce using rule 57 (fieldlist)


state 105

   44 fundec: FUNCTION ID LPAREN fieldlist . RPAREN COLON ID EQ exp
   45       | FUNCTION ID LPAREN fieldlist . RPAREN EQ exp

    RPAREN  shift, and go to state 118


state 106

   40 dec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 119


state 107

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   41 dec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 41 (dec)


state 108

   50 ty: ID .

    $default  reduce using rule 50 (ty)


state 109

   48 ty: LBRACE . fieldlist RBRACE

    ID  shift, and go to state 103

    $default  reduce using rule 55 (fieldlist)

    field      go to state 104
    fieldlist  go to state 120


state 110

   49 ty: ARRAY . OF ID

    OF  shift, and go to state 121


state 111

   51 namety: TYPE ID EQ ty .

    $default  reduce using rule 51 (namety)


state 112

   28 exp: LET declist IN exp END .

    $default  reduce using rule 28 (exp)


state 113

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   29    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 29 (exp)]
    MINUS     [reduce using rule 29 (exp)]
    TIMES     [reduce using rule 29 (exp)]
    DIVIDE    [reduce using rule 29 (exp)]
    EQ        [reduce using rule 29 (exp)]
    NEQ       [reduce using rule 29 (exp)]
    LT        [reduce using rule 29 (exp)]
    LE        [reduce using rule 29 (exp)]
    GT        [reduce using rule 29 (exp)]
    GE        [reduce using rule 29 (exp)]
    AND       [reduce using rule 29 (exp)]
    OR        [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)


state 114

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   22    | IF exp THEN exp ELSE exp .
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 22 (exp)]
    MINUS     [reduce using rule 22 (exp)]
    TIMES     [reduce using rule 22 (exp)]
    DIVIDE    [reduce using rule 22 (exp)]
    EQ        [reduce using rule 22 (exp)]
    NEQ       [reduce using rule 22 (exp)]
    LT        [reduce using rule 22 (exp)]
    LE        [reduce using rule 22 (exp)]
    GT        [reduce using rule 22 (exp)]
    GE        [reduce using rule 22 (exp)]
    AND       [reduce using rule 22 (exp)]
    OR        [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)


state 115

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   30    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    DO      shift, and go to state 122


state 116

   54 field: ID COLON . ID

    ID  shift, and go to state 123


state 117

   56 fieldlist: field COMMA . fieldlist

    ID  shift, and go to state 103

    $default  reduce using rule 55 (fieldlist)

    field      go to state 104
    fieldlist  go to state 124


state 118

   44 fundec: FUNCTION ID LPAREN fieldlist RPAREN . COLON ID EQ exp
   45       | FUNCTION ID LPAREN fieldlist RPAREN . EQ exp

    COLON  shift, and go to state 125
    EQ     shift, and go to state 126


state 119

   40 dec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 127


state 120

   48 ty: LBRACE fieldlist . RBRACE

    RBRACE  shift, and go to state 128


state 121

   49 ty: ARRAY OF . ID

    ID  shift, and go to state 129


state 122

   30 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 130


state 123

   54 field: ID COLON ID .

    $default  reduce using rule 54 (field)


state 124

   56 fieldlist: field COMMA fieldlist .

    $default  reduce using rule 56 (fieldlist)


state 125

   44 fundec: FUNCTION ID LPAREN fieldlist RPAREN COLON . ID EQ exp

    ID  shift, and go to state 131


state 126

   45 fundec: FUNCTION ID LPAREN fieldlist RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 132


state 127

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   40 dec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 40 (dec)


state 128

   48 ty: LBRACE fieldlist RBRACE .

    $default  reduce using rule 48 (ty)


state 129

   49 ty: ARRAY OF ID .

    $default  reduce using rule 49 (ty)


state 130

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   30    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 30 (exp)]
    MINUS     [reduce using rule 30 (exp)]
    TIMES     [reduce using rule 30 (exp)]
    DIVIDE    [reduce using rule 30 (exp)]
    EQ        [reduce using rule 30 (exp)]
    NEQ       [reduce using rule 30 (exp)]
    LT        [reduce using rule 30 (exp)]
    LE        [reduce using rule 30 (exp)]
    GT        [reduce using rule 30 (exp)]
    GE        [reduce using rule 30 (exp)]
    AND       [reduce using rule 30 (exp)]
    OR        [reduce using rule 30 (exp)]
    $default  reduce using rule 30 (exp)


state 131

   44 fundec: FUNCTION ID LPAREN fieldlist RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 133


state 132

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   45 fundec: FUNCTION ID LPAREN fieldlist RPAREN EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 45 (fundec)


state 133

   44 fundec: FUNCTION ID LPAREN fieldlist RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 13
    exp  go to state 134


state 134

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . GT exp
   18    | exp . LE exp
   19    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   44 fundec: FUNCTION ID LPAREN fieldlist RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 44 (fundec)
